package o;

import android.graphics.Bitmap;
import android.graphics.ColorFilter;
import android.graphics.PointF;
import android.graphics.Typeface;
/* loaded from: classes.dex */
public interface setQueueTitle {
    public static final Float HaptikSDK$a;
    public static final PointF HaptikSDK$b;
    public static final Float HaptikSDK$c;
    public static final Float HaptikSDK$e;
    public static final Float HaptikWebView;
    public static final CharSequence ICustomTabsCallback$Default;
    public static final Float ICustomTabsCallback$Stub$Proxy;
    public static final Float ICustomTabsService;
    public static final Float a;
    public static final Float ah$b;
    public static final Float aj$a;
    public static final Float ak;
    public static final Float ak$a;
    public static final Float ak$b;
    public static final Float asBinder;
    public static final Float asInterface;
    public static final Float extraCallback;
    public static final PointF extraCallbackWithResult;
    public static final Float extraCommand;
    public static final Float getDefaultImpl;
    public static final Bitmap getInitSettings;
    public static final ComponentActivity getInterfaceDescriptor;
    public static final Integer[] getSignupData;
    public static final Float invoke;
    public static final PointF isLogoutPending;
    public static final Typeface newSessionWithExtras;
    public static final Float onMessageChannelReady;
    public static final Float onPostMessage;
    public static final Float onRelationshipValidationResult;
    public static final Float onTransact;
    public static final Float onXdkEvent;
    public static final ColorFilter toString;
    public static final Float valueOf;
    public static final Float values;
    public static final Integer ah$a = 1;
    public static final Integer ICustomTabsCallback = 2;
    public static final Integer ICustomTabsCallback$Stub = 3;
    public static final Integer HaptikSDK$d = 4;
    public static final Integer ag$a = 5;
    public static final PointF onNavigationEvent = new PointF();
    public static final PointF setDefaultImpl = new PointF();

    static {
        Float valueOf2 = Float.valueOf(15.0f);
        getDefaultImpl = valueOf2;
        Float valueOf3 = Float.valueOf(16.0f);
        asBinder = valueOf3;
        Float valueOf4 = Float.valueOf(17.0f);
        values = valueOf4;
        HaptikSDK$b = new PointF();
        extraCallbackWithResult = new PointF();
        Float valueOf5 = Float.valueOf(0.0f);
        valueOf = valueOf5;
        isLogoutPending = new PointF();
        getInterfaceDescriptor = new ComponentActivity();
        ICustomTabsService = Float.valueOf(1.0f);
        ICustomTabsCallback$Stub$Proxy = valueOf5;
        onTransact = valueOf5;
        extraCallback = Float.valueOf(2.0f);
        onMessageChannelReady = Float.valueOf(3.0f);
        ak$a = Float.valueOf(4.0f);
        ak$b = Float.valueOf(5.0f);
        onXdkEvent = Float.valueOf(6.0f);
        a = Float.valueOf(7.0f);
        HaptikSDK$e = Float.valueOf(8.0f);
        ak = Float.valueOf(9.0f);
        HaptikWebView = Float.valueOf(10.0f);
        aj$a = Float.valueOf(11.0f);
        extraCommand = Float.valueOf(12.0f);
        asInterface = Float.valueOf(12.1f);
        onRelationshipValidationResult = Float.valueOf(13.0f);
        onPostMessage = Float.valueOf(14.0f);
        HaptikSDK$a = valueOf2;
        ah$b = valueOf3;
        HaptikSDK$c = valueOf4;
        invoke = Float.valueOf(18.0f);
        toString = new ColorFilter();
        getSignupData = new Integer[0];
        newSessionWithExtras = Typeface.DEFAULT;
        getInitSettings = Bitmap.createBitmap(1, 1, Bitmap.Config.ALPHA_8);
        ICustomTabsCallback$Default = "dynamic_text";
    }
}
